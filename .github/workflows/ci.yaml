name: ci-cd

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  ENVIRONMENT: ${{ (github.head_ref || github.ref_name) == 'main' && 'production' || 'preview' }}
  CONTENTFUL_SPACE_ID: ${{ vars.CONTENTFUL_SPACE_ID }}
  CONTENTFULL_ACCESS_TOKEN: ${{ secrets.CONTENTFULL_ACCESS_TOKEN }}
  CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
      - name: Run linting
        run: pnpm lint

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
      - name: Build application
        run: pnpm build

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
      - name: Run type checking
        run: pnpm tsc --noEmit

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
      - name: Run unit tests with coverage
        run: pnpm test:unit

  integration-test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.54.0-noble
      options: --user 1001
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
      - name: Run integration tests
        run: pnpm test:integration:ci
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30

  visual-regression-test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.54.0-noble
      options: --user 1001
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm
      - name: Run visual regression tests
        run: pnpm test:visual-regression:ci
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs:
      [
        lint,
        build,
        typecheck,
        unit-test,
        integration-test,
        visual-regression-test,
      ]
    environment: ${{ (github.head_ref || github.ref_name) == 'main' && 'production' || 'preview' }}

    steps:
      - name: Determine environment
        run: echo "Deploying to ${{ env.ENVIRONMENT }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ env.ENVIRONMENT }} --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy production
        if: env.ENVIRONMENT == 'production'
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy preview
        if: env.ENVIRONMENT == 'preview'
        run: |
          PREVIEW_URL=$(vercel deploy --token=${{ secrets.VERCEL_TOKEN }})
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV

      - name: Comment PR with preview URL
        if: env.ENVIRONMENT == 'preview'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ðŸš€ **Preview deployment ready!**

            ðŸ“Ž **Preview URL**: ${{ env.PREVIEW_URL }}
